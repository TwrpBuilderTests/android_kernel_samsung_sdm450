/* Copyright (c) 2017, The Linux Foundation. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

&soc {
	tlmm: pinctrl@1000000 {
		acc_int: acc_int {
			mux {
				pins = "gpio42";
				function = "gpio";
			};
			config {
				pins = "gpio42";
				drive-strength = <2>;
				bias-disable;
			};
		};

		sensor_i2c: sensor_i2c {
			mux {
				pins = "gpio64", "gpio65";
				function = "gpio";
			};
			config {
				pins = "gpio64", "gpio65";
				drive-strength = <2>;
				bias-disable;
			};
		};

		sensor_ldo: sensor_ldo {
			mux {
				pins = "gpio36";
				function = "gpio";
			};
			config {
				pins = "gpio36";
				drive-setrength = <2>;
				bias-disable;
				output-high;
			};
		};

		prox_int: prox_int {
			mux {
				pins = "gpio43";
				function = "gpio";
			};
			config {
				pins = "gpio43";
				drive-strength = <2>;
				bias-disable;
			};
		};

		prox_ldo_en: prox_ldo_en {
			mux {
				pins = "gpio127";
				function = "gpio";
			};
			config {
				pins = "gpio127";
				drive-strength = <2>;
				bias-disable;
			};
		};

		prox_i2c: prox_i2c {
			mux {
				pins = "gpio16", "gpio17";
				function = "gpio";
			};
			config {
				pins = "gpio16", "gpio17";
				drive-strength = <2>;
				bias-disable;
			};
		};

		grip_int: grip_int {
			mux {
				pins = "gpio86";
				function = "gpio";
			};
			config {
				pins = "gpio86";
				drive-strength = <2>;
				bias-disable;
			};
		};

		grip_i2c: grip_i2c {
			mux {
				pins = "gpio2", "gpio3";
				function = "gpio";
			};
			config {
				pins = "gpio2", "gpio3";
				drive-strength = <2>;
				bias-disable;
			};
		};
	};

	i2c_24: i2c@24 { /* SW I2C */
		cell-index = <24>;
		compatible = "i2c-gpio";
		gpios = <&tlmm 64 0 /* sda */
			&tlmm 65 0 /* scl */
		>;
		#i2c-gpio,delay-us = <2>;
		#address-cells = <1>;
		#size-cells = <0>;
		pinctrl-names = "default";
		pinctrl-0 = <&sensor_ldo>;

		lis2ds@1d {
			compatible = "st,lis2ds";
			reg = <0x1d>;
			pinctrl-names = "default";
			pinctrl-0 = <&acc_int &sensor_i2c>;
			interrupt-parent = <&tlmm>;
			interrupts = <42 0>;
			st,orientation = <2 1 1 1 0 1 1 1 2>;
			st,drdy-int-pin = <1>;
			st,irq_gpio = <&tlmm 42 0>;
		};
	};

	i2c_25: i2c@25 { /* SW I2C */
		cell-index = <25>;
		compatible = "i2c-gpio";
		gpios = <&tlmm 16 0/* sda */
			&tlmm 17 0/* scl */
		>;
		#i2c-gpio,delay-us = <2>;
		#address-cells = <1>;
		#size-cells = <0>;

		stk3013@48 {
			compatible = "stk,stk3013";
			reg = <0x48>;
			interrupt-parent = <&tlmm>;
			interrupts = <43 0>;
			pinctrl-names = "default";
			pinctrl-0 = <&prox_int &prox_ldo_en &prox_i2c>;
			stk,irq-gpio = <&tlmm 43 0>;
			stk,vled_ldo = <&tlmm 127 0>;
			stk,state-reg = <0x2d>;
			stk,psctrl-reg = <0x71>;
			stk,alsctrl-reg = <0x2A>;
			stk,ledctrl-reg = <0xBF>;
			stk,wait-reg = <0x03>;
			stk,ps-thd-h = <20>;
			stk,ps-thd-l = <13>;
			stk,ps-cancel-thd-h = <10>;
			stk,ps-cancel-thd-l = <7>;
			stk,ps-cal-skip-adc = <10>;
			stk,ps-cal-fail-adc = <20>;
			stk,ps-default-offset = <3>;
			stk,transmittance = <500>;
		};
	};

	i2c_26: i2c@26 { /* SW I2C */
		cell-index = <26>;
		compatible = "i2c-gpio";
		gpios = <&tlmm 2 0/* sda */
			&tlmm 3 0/* scl */
		>;
		#i2c-gpio,delay-us = <2>;
		#address-cells = <1>;
		#size-cells = <0>;

		a96t3x6@20 {
			compatible = "a96t3x6";
			pinctrl-names = "default";
			pinctrl-0 = <&grip_int &grip_i2c>;
			reg = <0x20>;
			interrupt-parent = <&tlmm>;
			interrupts = <86 0>;
			a96t3x6,irq_gpio = <&tlmm 86 0>;
			a96t3x6,ldo_en = <&tlmm 87 0>;
			a96t3x6,fw_path = "abov/a96t326_j8y18lte.fw";
			a96t3x6,chipid = "A96T326";
			a96t3x6,firmup_cmd = <0x32>;
		};
	};
};
